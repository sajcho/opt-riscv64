# Description:	Firefox web browser
# URL:		https://www.firefox.com/
# Maintainer:	sajcho, saux dot aarch64 at gmail dot com
# Depends on:	autoconf-2.13 cbindgen dbus-glib ffmpeg libidl libnotify nodejs nss libxcomposite libxinerama libxt zip

name=firefox
version=112.0
release=1
source=(https://archive.mozilla.org/pub/firefox/releases/${version}/source/${name}-${version}.source.tar.xz \
	firefox.desktop)

build() {
	cd ${name}-${version}

	# Then fix an issue with regular expressions in python-3.11
	# Solution from BLFS
	grep -rl \"rU\" | xargs sed -i 's/"rU"/"r"/'
	sed \
		-e 's/?s)\./?s:.)/' \
		-e '/?m)/{s/?m)/?m:/;s/\$"/$)"/}' \
		-e '/?s)%/{s/?s)/?s:/;s/?"/?)"/}' \
		-i xpcom/idl-parser/xpidl/xpidl.py

	export SHELL="/bin/bash"
	export BUILD_OFFICIAL=1
	export MOZILLA_OFFICIAL=1
	export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE="none"
	export MOZBUILD_STATE_PATH="$PKGMK_SOURCE_DIR/mozbuild"
	export MOZ_NOSPAM=1
	export MOZ_DEBUG_FLAGS=" "
	export MOZ_MAKE_FLAGS="-j ${JOBS-1}"

	mkdir "$PKGMK_SOURCE_DIR/rust" || true
	export CARGO_HOME="$PKGMK_SOURCE_DIR/rust"

	### api keys
	#_google_api_key=""
	#_mozilla_api_key=""
	#echo -n "$_google_api_key" > google-api-key
	#echo -n "$_mozilla_api_key" > mozilla-api-key

cat <<- EOF > .mozconfig
		mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objdir
		unset MOZ_TELEMETRY_REPORTING
		#
		#ac_add_options --host=riscv64gc-unknown-linux-gnu
		#ac_add_options --target=riscv64gc-unknown-linux-gnu
		#
		#ac_add_options --with-google-location-service-api-keyfile=$SRC/${name}-${version}/google-api-key
		#ac_add_options --with-google-safebrowsing-api-keyfile=$SRC/${name}-${version}/google-api-key
		#ac_add_options --with-mozilla-api-keyfile=$SRC/${name}-${version}/mozilla-api-key
		#
		ac_add_options --prefix=/usr
		ac_add_options --disable-debug
		ac_add_options --disable-debug-symbols
		#
		ac_add_options --disable-crashreporter
		ac_add_options --disable-install-strip
		ac_add_options --disable-jemalloc
		ac_add_options --disable-profiling
		ac_add_options --disable-strip
		ac_add_options --disable-tests
		ac_add_options --disable-updater
		ac_add_options --disable-necko-wifi
		ac_add_options --disable-jack
		ac_add_options --disable-smoosh
		ac_add_options --disable-bootstrap
		ac_add_options --disable-valgrind
		ac_add_options --disable-webrtc
		#ac_add_options --disable-elf-hack
		#
		ac_add_options --enable-release
		ac_add_options --enable-application=browser
		ac_add_options --enable-official-branding
		ac_add_options --enable-default-toolkit=cairo-gtk3-wayland
		ac_add_options --enable-pulseaudio
		ac_add_options --enable-alsa
		ac_add_options --enable-dbus
		ac_add_options --enable-av1
		ac_add_options --enable-ffmpeg
		ac_add_options --enable-hardening
		ac_add_options --enable-rust-simd
		ac_add_options --enable-optimize
		ac_add_options --enable-linker=lld
		ac_add_options --enable-system-ffi
		ac_add_options --enable-system-pixman
		#
		ac_add_options --with-system-ffi
		ac_add_options --with-system-icu
		ac_add_options --with-system-jpeg
		ac_add_options --with-system-libevent
		ac_add_options --with-system-libvpx
		ac_add_options --with-system-nspr
		ac_add_options --with-system-nss
		ac_add_options --with-system-pixman
		ac_add_options --with-system-png
		ac_add_options --with-system-webp
		ac_add_options --with-system-zlib
		ac_add_options --without-wasm-sandboxed-libraries
EOF

	export CC=clang
	export CXX=clang++
	CFLAGS+=" -Wno-deprecated-declarations -Wno-deprecated-builtins"
	CXXFLAGS+=" -Wno-deprecated-declarations -Wno-deprecated-builtins"
	export RUSTFLAGS="-Clinker=clang -Clink-args=-fuse-ld=lld"

	./mach build

	DESTDIR=$PKG ./mach install

	install -d $PKG/usr/share/pixmaps
	ln -s /usr/lib/firefox/browser/chrome/icons/default/default48.png $PKG/usr/share/pixmaps/firefox_default48.png
	install -D -m 0644 $SRC/firefox.desktop $PKG/usr/share/applications/firefox.desktop

	# Remove crap
	rm -r $PKG/usr/lib/firefox/browser/features
	rm $PKG/usr/lib/firefox/removed-files

	install -d $PKG/etc/revdep.d
	echo "/usr/lib/firefox" > $PKG/etc/revdep.d/firefox
}
